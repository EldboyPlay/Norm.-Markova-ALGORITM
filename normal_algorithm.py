 # README файл прикреплен к программе.
# ======================================================
 # Программа была протестирована на следующих числах:
 # Вход: 328, Выход: 329
# Вход: 789, Выход: 790
# ======================================================
def normal_algorithm(x):
    # Преобразуем число в строку и добавляем 'a' в начало
    x = 'a' + str(x)
    print(f"Исходное состояние: {x}")

    # Цикл продолжается, пока применяются правила замены
    while True:
        original_x = x  # Сохраняем начальное состояние для сравнения

        # Применяем правила замены
        if '0b' in x:
            x = x.replace('0b', '.1', 1)
            print("Применено правило '0b -> .1':", x)
        elif '1b' in x:
            x = x.replace('1b', '.2', 1)
            print("Применено правило '1b -> .2':", x)
        elif '2b' in x:
            x = x.replace('2b', '.3', 1)
            print("Применено правило '2b -> .3':", x)
        elif '3b' in x:
            x = x.replace('3b', '.4', 1)
            print("Применено правило '3b -> .4':", x)
        elif '4b' in x:
            x = x.replace('4b', '.5', 1)
            print("Применено правило '4b -> .5':", x)
        elif '5b' in x:
            x = x.replace('5b', '.6', 1)
            print("Применено правило '5b -> .6':", x)
        elif '6b' in x:
            x = x.replace('6b', '.7', 1)
            print("Применено правило '6b -> .7':", x)
        elif '7b' in x:
            x = x.replace('7b', '.8', 1)
            print("Применено правило '7b -> .8':", x)
        elif '8b' in x:
            x = x.replace('8b', '.9', 1)
            print("Применено правило '8b -> .9':", x)
        elif '9b' in x:
            x = x.replace('9b', 'b0', 1)
            print("Применено правило '9b -> b0':", x)
        elif 'b' in x:
            x = x.replace('b', '.1', 1)
            print("Применено правило 'b -> .1':", x)
        elif 'a0' in x:
            x = x.replace('a0', '0a', 1)
            print("Применено правило 'a0 -> 0a':", x)
        elif 'a1' in x:
            x = x.replace('a1', '1a', 1)
            print("Применено правило 'a1 -> 1a':", x)
        elif 'a2' in x:
            x = x.replace('a2', '2a', 1)
            print("Применено правило 'a2 -> 2a':", x)
        elif 'a3' in x:
            x = x.replace('a3', '3a', 1)
            print("Применено правило 'a3 -> 3a':", x)
        elif 'a4' in x:
            x = x.replace('a4', '4a', 1)
            print("Применено правило 'a4 -> 4a':", x)
        elif 'a5' in x:
            x = x.replace('a5', '5a', 1)
            print("Применено правило 'a5 -> 5a':", x)
        elif 'a6' in x:
            x = x.replace('a6', '6a', 1)
            print("Применено правило 'a6 -> 6a':", x)
        elif 'a7' in x:
            x = x.replace('a7', '7a', 1)
            print("Применено правило 'a7 -> 7a':", x)
        elif 'a8' in x:
            x = x.replace('a8', '8a', 1)
            print("Применено правило 'a8 -> 8a':", x)
        elif 'a9' in x:
            x = x.replace('a9', '9a', 1)
            print("Применено правило 'a9 -> 9a':", x)
        elif '0a' in x:
            x = x.replace('0a', '0b', 1)
            print("Применено правило '0a -> 0b':", x)
        elif '1a' in x:
            x = x.replace('1a', '1b', 1)
            print("Применено правило '1a -> 1b':", x)
        elif '2a' in x:
            x = x.replace('2a', '2b', 1)
            print("Применено правило '2a -> 2b':", x)
        elif '3a' in x:
            x = x.replace('3a', '3b', 1)
            print("Применено правило '3a -> 3b':", x)
        elif '4a' in x:
            x = x.replace('4a', '4b', 1)
            print("Применено правило '4a -> 4b':", x)
        elif '5a' in x:
            x = x.replace('5a', '5b', 1)
            print("Применено правило '5a -> 5b':", x)
        elif '6a' in x:
            x = x.replace('6a', '6b', 1)
            print("Применено правило '6a -> 6b':", x)
        elif '7a' in x:
            x = x.replace('7a', '7b', 1)
            print("Применено правило '7a -> 7b':", x)
        elif '8a' in x:
            x = x.replace('8a', '8b', 1)
            print("Применено правило '8a -> 8b':", x)
        elif '9a' in x:
            x = x.replace('9a', '9b', 1)
            print("Применено правило '9a -> 9b':", x)
        elif 'a.' in x:
            x = x.replace('a.', 'a', 1)
            print("Применено правило 'a. -> a':", x)
        else:
            if x == original_x:
                # Если не произошло ни одной замены, завершаем цикл
                print("Нет применяемых правил, завершение.")
                break

    # Возвращаем результат без точки
    result = x.replace('.', '')
    print(f"Итоговое число: {result}")
    return result

# Пример использования функции
result = normal_algorithm(328)


# ------------------------------------------------------------------------------
# Как понять фразу в терминале при выводе "Нет применяемых правил, завершение" ?
# ------------------------------------------------------------------------------
# В данном контексте, фраза "Нет применяемых правил, завершение." означает, #
# что алгоритм достиг состояния, в котором ни одно из его правил замены #
# не может быть применено к текущей строке. #
# Это является индикатором того, что алгоритм завершил свою работу. #